<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.3.0-dev" type="baseline" client="" dependencies="true" name="" variant="all" version="8.3.0-dev">

    <issue
        id="AvoidByLazy"
        message="Avoid `by lazy` for simple lazy initialization"
        errorLine1="  val getAnimatedPropertiesFunction by lazy { findClockFunction(&quot;getAnimatedProperties&quot;) }"
        errorLine2="                                       ~~~~">
        <location
            file="src/com/android/tools/idea/compose/preview/animation/AnimationClock.kt"
            line="94"
            column="40"/>
    </issue>

    <issue
        id="AvoidByLazy"
        message="Avoid `by lazy` for simple lazy initialization"
        errorLine1="  val getTransitionsFunction: Method? by lazy { findClockFunctionIfExists(&quot;getTransitions&quot;) }"
        errorLine2="                                         ~~~~">
        <location
            file="src/com/android/tools/idea/compose/preview/animation/AnimationClock.kt"
            line="101"
            column="42"/>
    </issue>

    <issue
        id="AvoidByLazy"
        message="Avoid `by lazy` for simple lazy initialization"
        errorLine1="  val getMaxDurationFunction by lazy { findClockFunction(&quot;getMaxDuration&quot;) }"
        errorLine2="                                ~~~~">
        <location
            file="src/com/android/tools/idea/compose/preview/animation/AnimationClock.kt"
            line="104"
            column="33"/>
    </issue>

    <issue
        id="AvoidByLazy"
        message="Avoid `by lazy` for simple lazy initialization"
        errorLine1="  val getMaxDurationPerIteration by lazy { findClockFunction(&quot;getMaxDurationPerIteration&quot;) }"
        errorLine2="                                    ~~~~">
        <location
            file="src/com/android/tools/idea/compose/preview/animation/AnimationClock.kt"
            line="107"
            column="37"/>
    </issue>

    <issue
        id="AvoidByLazy"
        message="Avoid `by lazy` for simple lazy initialization"
        errorLine1="  val setClockTimeFunction by lazy { findClockFunction(&quot;setClockTime&quot;) }"
        errorLine2="                              ~~~~">
        <location
            file="src/com/android/tools/idea/compose/preview/animation/AnimationClock.kt"
            line="110"
            column="31"/>
    </issue>

    <issue
        id="AvoidByLazy"
        message="Avoid `by lazy` for simple lazy initialization"
        errorLine1="  val setClockTimesFunction by lazy { findClockFunctionIfExists(&quot;setClockTimes&quot;) }"
        errorLine2="                               ~~~~">
        <location
            file="src/com/android/tools/idea/compose/preview/animation/AnimationClock.kt"
            line="113"
            column="32"/>
    </issue>

    <issue
        id="AvoidByLazy"
        message="Avoid `by lazy` for simple lazy initialization"
        errorLine1="  val updateFromAndToStatesFunction by lazy { findClockFunction(&quot;updateFromAndToStates&quot;) }"
        errorLine2="                                       ~~~~">
        <location
            file="src/com/android/tools/idea/compose/preview/animation/AnimationClock.kt"
            line="116"
            column="40"/>
    </issue>

    <issue
        id="AvoidByLazy"
        message="Avoid `by lazy` for simple lazy initialization"
        errorLine1="  val updateAnimatedVisibilityStateFunction by lazy {"
        errorLine2="                                               ~~~~">
        <location
            file="src/com/android/tools/idea/compose/preview/animation/AnimationClock.kt"
            line="126"
            column="48"/>
    </issue>

    <issue
        id="AvoidByLazy"
        message="Avoid `by lazy` for simple lazy initialization"
        errorLine1="  val getAnimatedVisibilityStateFunction by lazy { findClockFunction(&quot;getAnimatedVisibilityState&quot;) }"
        errorLine2="                                            ~~~~">
        <location
            file="src/com/android/tools/idea/compose/preview/animation/AnimationClock.kt"
            line="138"
            column="45"/>
    </issue>

    <issue
        id="AvoidByLazy"
        message="Avoid `by lazy` for simple lazy initialization"
        errorLine1="  private val updateNotificationQueue: MergingUpdateQueue by lazy {"
        errorLine2="                                                             ~~~~">
        <location
            file="src/com/android/tools/idea/compose/preview/Notifications.kt"
            line="42"
            column="62"/>
    </issue>

    <issue
        id="AvoidByLazy"
        message="Avoid `by lazy` for simple lazy initialization"
        errorLine1="private val paramValueRegex: Regex by lazy { Regex(&quot;(.+)${DeviceSpec.OPERATOR}(.+)&quot;) }"
        errorLine2="                                      ~~~~">
        <location
            file="src/com/android/tools/idea/compose/annotator/PreviewAnnotationCheck.kt"
            line="326"
            column="39"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope"
        errorLine1="    if (bounds.isEmpty() || boundsSet.contains(bounds)) {"
        errorLine2="               ~~~~~~~">
        <location
            file="src/com/android/tools/idea/compose/preview/scene/ComposeSceneComponentProvider.kt"
            line="55"
            column="16"/>
    </issue>

</issues>
